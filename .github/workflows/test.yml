name: Tests

on:
  workflow_call:
    inputs:
      nonce:
        type: string
        required: true

jobs:
  all-other-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v4

      - name: Restore cached build files
        uses: actions/cache@v3
        with:
          key: ${{ inputs.nonce }}
          path: |
            ./components
            ./node_modules

      - name: Remove Postinstall Script
        run: npm pkg set scripts.postinstall="echo no-postinstall"

      - name: Install Dependencies
        run: yarn install --frozen-lockfile
        env:
          CI: true

      - name: Lint all files
        run: yarn eslint .

      - name: Run Eslint Plugin Tests
        run: yarn test:eslint-plugin

      - name: Generate icon files
        run: |
          yarn turbo run build --filter=@cypress-design/css
          yarn workspace @cypress-design/icon-registry svg-to-ts-constants
          yarn workspace @cypress-design/icon-registry node ./build-icons.mjs

      - name: Run Unit Tests
        run: yarn test

      - name: Build Components
        run: yarn run build:components

      - name: Types docs
        run: yarn vue-tsc --noEmit -p .

      - name: Types Vue
        run: yarn vue-tsc --noEmit --project ./tsconfig.vue.json

      - name: Types React
        run: yarn tsc --noEmit --project ./tsconfig.react.json

  component:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        container: [1, 2, 3]
    steps:
      - uses: browser-actions/setup-chrome@latest
      - run: echo "BROWSER_PATH=$(which chrome)" >> $GITHUB_ENV

      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4

      - name: Restore cached build files
        uses: actions/cache@v3
        with:
          key: ${{ inputs.nonce }}
          path: |
            ./components
            ./node_modules

      - name: Install Dependencies
        run: yarn install --frozen-lockfile
        env:
          CI: true

      - name: Cypress run CT
        uses: cypress-io/github-action@v5
        with:
          component: true
          record: true
          browser: '${{ env.BROWSER_PATH }}'
          command-prefix: 'yarn percy exec --parallel -- '
          parallel: true
          group: 'Component'
          ci-build-id: ${{ github.run_id }}-${{ github.run_attempt }}
        env:
          # Recommended: pass the GitHub token lets this action correctly
          # determine the unique run id necessary to re-run the checks
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
